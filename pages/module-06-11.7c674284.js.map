{"mappings":"uDAAAA,EAAiBC,KAAKC,MAAM,4NCI5B,MAAMC,EAAO,CACXC,KAAMC,SAASD,KACfE,KAAMD,SAASE,cAAc,kBAC7BC,OAAQH,SAASE,cAAc,uBAC/BE,KAAMJ,SAASE,cAAc,cAC7BG,SAAUL,SAASE,cAAc,qBA6B7BI,EAAS,KACbR,EAAKM,KAAKG,UAAY,GACtBT,EAAKM,KAAKI,mBAAmB,YAA6BC,EAAAd,GApBvDe,KACC,EAACC,KAAEA,EAAIC,OAAEA,KAAa,qIAEkCA,EAAS,UAAY,mDACvCD,oHAKvCE,KAAK,IAWyD,EA4CnEf,EAAKG,KAAKa,iBAAiB,UAjBDC,IACxBA,EAAMC,iBAxBR,SAA4BD,GAC1B,MAAME,EAAU,CACdN,KAAMI,EAAMG,OAAOC,SAASC,KAAKC,MACjCT,QAAQ,GAEVH,EAAAd,GAAM2B,KAAKL,E,CAoBXM,CAAmBR,GACnBjB,EAAKG,KAAKuB,QACVlB,GAAQ,IAcVR,EAAKM,KAAKU,iBAAiB,SAVFC,IAClBA,EAAMG,OAAOO,UAAUC,SAAS,wBAvBvC,SAAiCX,GAE/B,MAAMY,EAAiBZ,EAAMG,OAAOU,WAAW1B,cAAc,oBAAoB2B,YAC3EC,EAAiBrB,EAAAd,GAAMoC,WAAUC,GAAQA,EAAKrB,OAASgB,IAE7DlB,EAAAd,GAAMsC,OAAOH,EAAgB,E,CAqB7BI,CAAwBnB,GACxBA,EAAMG,OAAOU,WAAWO,SAAQ,IAQlC7B,IACA8B,QAAQC,MAAM5B,EAAAd","sources":["src/js/items.json","src/js/ToDo.js"],"sourcesContent":["//------------------ data moodel -> array of objects (tasks):\n[\n  {\n    \"task\": \"поповнити телефон\",\n    \"isDone\": true\n  },\n  {\n    \"task\": \"купити хліба\",\n    \"isDone\": false\n  },\n  {\n    \"task\": \"купити молоко\",\n    \"isDone\": false\n  },\n  {\n    \"task\": \"обрати подарунок дружині\",\n    \"isDone\": false\n  },\n  {\n    \"task\": \"спалити московію\",\n    \"isDone\": true\n  }\n]\n","//------------------ data moodel -> array of objects (tasks):\nimport items from './items';\n\n//------------------ object of DOM's refs:\nconst refs = {\n  body: document.body,\n  form: document.querySelector('.add-task-form'),\n  addBtn: document.querySelector('.add-task-form__btn'),\n  list: document.querySelector('.task-list'),\n  taskText: document.querySelector('.task-list__text'),\n};\n\n//---------------------------- function getItemTamplate ---------------------------------------------\n/**\n * Function returns string (tamplate for markup) of task list\n * @param {Array} items - array of obj (tasks)\n * @returns {string} string complete to insert in DOM\n */\nconst getItemTamplate = items => {\n  return items\n    .map(\n      ({ task, isDone }) => `<li class=\"task-list__item\">\n          <div class=\"task-list__box\">\n            <input class=\"task-list__check\" type=\"checkbox\" ${isDone ? 'checked' : ''}/>\n            <span class=\"task-list__text\">${task}</span>\n          </div>\n           <button class=\"task-list__delbtn\" type=\"button\"></button>\n        </li>`,\n    )\n    .join('');\n};\n\n//------------------------------ function render  ------------------------------------------------\n/**\n * Function renders list of tasks in DOM\n * @param {} none\n * @returns\n */\nconst render = () => {\n  refs.list.innerHTML = '';\n  refs.list.insertAdjacentHTML('beforeend', getItemTamplate(items));\n};\n\n//---------------------------- function addTaskToTaskArray  ------------------------------------------------\nfunction addTaskToTaskArray(event) {\n  const newTask = {\n    task: event.target.elements.text.value,\n    isDone: false,\n  };\n  items.push(newTask);\n}\n\n//---------------------------- function deleteTaskFromTaskArray  ------------------------------------------------\nfunction deleteTaskFromTaskArray(event) {\n  // finde target object in array\n  const curentTaskText = event.target.parentNode.querySelector('.task-list__text').textContent;\n  const curentObjIndex = items.findIndex(item => item.task === curentTaskText);\n  // delet object from array\n  items.splice(curentObjIndex, 1);\n}\n\n//---------------------------- function onAddTaskBtnClick  ------------------------------------------------\n/**\n * Function adds new task to task list\n * @param {Event} event\n * @returns\n */\nconst onAddTaskBtnClick = event => {\n  event.preventDefault();\n  addTaskToTaskArray(event);\n  refs.form.reset();\n  render();\n};\n\n//---------------------------- function onDeleteBtnClick  ------------------------------------------------\nconst onDeleteBtnClick = event => {\n  if (!event.target.classList.contains('task-list__delbtn')) {\n    return;\n  }\n  deleteTaskFromTaskArray(event); // delete element from data-model array\n  event.target.parentNode.remove(); // delete element from DOM\n};\n\n//----------------------- add event listner on form submit, and adds new task  ---------------------\nrefs.form.addEventListener('submit', onAddTaskBtnClick);\nrefs.list.addEventListener('click', onDeleteBtnClick);\n\n// run\nrender();\nconsole.table(items);\n"],"names":["$8ee3f1f34b47001d$exports","JSON","parse","$493689dbc68bbd98$var$refs","body","document","form","querySelector","addBtn","list","taskText","$493689dbc68bbd98$var$render","innerHTML","insertAdjacentHTML","$parcel$interopDefault","map","task","isDone","join","addEventListener","event","preventDefault","newTask","target","elements","text","value","push","$493689dbc68bbd98$var$addTaskToTaskArray","reset","classList","contains","curentTaskText","parentNode","textContent","curentObjIndex","findIndex","item","splice","$493689dbc68bbd98$var$deleteTaskFromTaskArray","remove","console","table"],"version":3,"file":"module-06-11.7c674284.js.map"}