{"mappings":"mEAAAA,EAAiBC,KAAKC,MAAM,4NCI5B,IAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,kBAC7BC,OAAQF,SAASC,cAAc,uBAC/BE,KAAMH,SAASC,cAAc,eA6BzBG,EAAS,WACbN,EAAKK,KAAKE,UAAY,GACtBP,EAAKK,KAAKG,mBAAmB,YAA6BC,EAAAZ,GApBvDa,KACC,SAAAC,G,IAAGC,EAAID,EAAJC,KAAMC,EAAMF,EAANE,O,MAAa,qIAGgBC,OADkBD,EAAS,UAAY,GAAG,kDACrCC,OAALF,EAAK,iH,IAK5CG,KAAK,I,EAwBV,SAASC,EAAuBC,GAC9B,IAAMC,EAAiBD,EAAME,OAAOC,WAAWjB,cAAc,oBAAoBkB,YAEjF,OADuBZ,EAAAZ,GAAMyB,WAAU,SAAAC,G,OAAQA,EAAKX,OAASM,C,IA4C/DlB,EAAKC,KAAKuB,iBAAiB,UA7BD,SAAAP,GACxBA,EAAMQ,iBA3BR,SAA4BR,GAC1B,IAAMS,EAAU,CACdd,KAAMK,EAAME,OAAOQ,SAASC,KAAKC,MACjChB,QAAQ,GAEVJ,EAAAZ,GAAMiC,KAAKJ,E,CAuBXK,CAAmBd,GACnBjB,EAAKC,KAAK+B,QACV1B,IACA2B,QAAQC,MAAMzB,EAAAZ,G,IAyBhBG,EAAKK,KAAKmB,iBAAiB,SArBF,SAAAP,GAClBA,EAAME,OAAOgB,UAAUC,SAAS,wBApBvC,SAAiCnB,GAC/BR,EAAAZ,GAAMwC,OAAOrB,EAAuBC,GAAQ,E,CAsB5CqB,CAAwBrB,GACxBA,EAAME,OAAOC,WAAWmB,SACxBN,QAAQC,MAAMzB,EAAAZ,I,IAgBhBG,EAAKK,KAAKmB,iBAAiB,SAZH,SAAAP,GACQ,UAA1BA,EAAME,OAAOqB,WAIjB/B,EAAAZ,GAAMmB,EAAuBC,IAAQJ,OAASI,EAAME,OAAOsB,QAC3DR,QAAQC,MAAMzB,EAAAZ,I,IAShBS,IACA2B,QAAQC,MAAMzB,EAAAZ,G","sources":["src/js/items.json","src/js/ToDo.js"],"sourcesContent":["//------------------ data moodel -> array of objects (tasks):\n[\n  {\n    \"task\": \"поповнити телефон\",\n    \"isDone\": true\n  },\n  {\n    \"task\": \"купити хліба\",\n    \"isDone\": false\n  },\n  {\n    \"task\": \"купити молоко\",\n    \"isDone\": false\n  },\n  {\n    \"task\": \"обрати подарунок дружині\",\n    \"isDone\": false\n  },\n  {\n    \"task\": \"спалити московію\",\n    \"isDone\": true\n  }\n]\n","//------------------ data moodel -> array of objects (tasks):\nimport items from './items';\n\n//------------------ object of DOM's refs:\nconst refs = {\n  form: document.querySelector('.add-task-form'),\n  addBtn: document.querySelector('.add-task-form__btn'),\n  list: document.querySelector('.task-list'),\n};\n\n//---------------------------- function getItemTamplate ---------------------------------------------\n/**\n * Function returns string (tamplate for markup) of task list\n * @param {Array} items - array of obj (tasks)\n * @returns {string} string complete to insert in DOM\n */\nconst getItemTamplate = items => {\n  return items\n    .map(\n      ({ task, isDone }) => `<li class=\"task-list__item\">\n          <div class=\"task-list__box\">\n            <input class=\"task-list__check\" type=\"checkbox\" ${isDone ? 'checked' : ''}/>\n            <span class=\"task-list__text\">${task}</span>\n          </div>\n           <button class=\"task-list__delbtn\" type=\"button\"></button>\n        </li>`,\n    )\n    .join('');\n};\n\n//------------------------------ function render  ------------------------------------------------\n/**\n * Function renders list of tasks in DOM\n * @param {} none\n * @returns\n */\nconst render = () => {\n  refs.list.innerHTML = '';\n  refs.list.insertAdjacentHTML('beforeend', getItemTamplate(items));\n};\n\n//---------------------------- function addTaskToTaskArray  ------------------------------------------------\nfunction addTaskToTaskArray(event) {\n  const newTask = {\n    task: event.target.elements.text.value,\n    isDone: false,\n  };\n  items.push(newTask);\n}\n\n//---------------------------- function getIndexOfTargetObject  ---------------------------------------------------\nfunction getIndexOfTargetObject(event) {\n  const targetTaskText = event.target.parentNode.querySelector('.task-list__text').textContent;\n  const targetObjIndex = items.findIndex(item => item.task === targetTaskText);\n  return targetObjIndex;\n}\n\n//---------------------------- function deleteTaskFromTaskArray  ------------------------------------------------\nfunction deleteTaskFromTaskArray(event) {\n  items.splice(getIndexOfTargetObject(event), 1);\n}\n\n//---------------------------- function onAddTaskBtnClick  ------------------------------------------------\n/**\n * Function adds new task to task list\n * @param {Event} event\n * @returns\n */\nconst onAddTaskBtnClick = event => {\n  event.preventDefault();\n  addTaskToTaskArray(event);\n  refs.form.reset();\n  render();\n  console.table(items);\n};\n\n//---------------------------- function onDeleteBtnClick  ------------------------------------------------\nconst onDeleteBtnClick = event => {\n  if (!event.target.classList.contains('task-list__delbtn')) {\n    return;\n  }\n  deleteTaskFromTaskArray(event); // delete element from data-model array\n  event.target.parentNode.remove(); // delete element from DOM\n  console.table(items);\n};\n\n//---------------------------- function onCheckboxClick  ------------------------------------------------\nconst onCheckboxClick = event => {\n  if (event.target.nodeName !== 'INPUT') {\n    return;\n  }\n  //change isDone property of data object\n  items[getIndexOfTargetObject(event)].isDone = event.target.checked;\n  console.table(items);\n};\n\n//----------------------- add event listner on form submit, and adds new task  ---------------------\nrefs.form.addEventListener('submit', onAddTaskBtnClick);\nrefs.list.addEventListener('click', onDeleteBtnClick);\nrefs.list.addEventListener('click', onCheckboxClick);\n\n// run\nrender();\nconsole.table(items);\n"],"names":["$265ef7a9a4e5aa04$exports","JSON","parse","$d508c9176352b1e6$var$refs","form","document","querySelector","addBtn","list","$d508c9176352b1e6$var$render","innerHTML","insertAdjacentHTML","$parcel$interopDefault","map","param","task","isDone","concat","join","$d508c9176352b1e6$var$getIndexOfTargetObject","event","targetTaskText","target","parentNode","textContent","findIndex","item","addEventListener","preventDefault","newTask","elements","text","value","push","$d508c9176352b1e6$var$addTaskToTaskArray","reset","console","table","classList","contains","splice","$d508c9176352b1e6$var$deleteTaskFromTaskArray","remove","nodeName","checked"],"version":3,"file":"module-06-11.112097de.js.map"}