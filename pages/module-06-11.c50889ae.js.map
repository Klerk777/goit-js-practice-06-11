{"mappings":"uDAAAA,EAAiBC,KAAKC,MAAM,+HCI5B,MAAMC,EAAO,CACXC,KAAMC,SAASD,KACfE,KAAMD,SAASE,cAAc,kBAC7BC,KAAMH,SAASE,cAAc,cAC7BE,MAAOJ,SAASE,cAAc,yBAC9BG,OAAQL,SAASE,cAAc,wBA4C3BI,EAAS,KACbR,EAAKK,KAAKI,UAAY,GACtBT,EAAKK,KAAKK,mBAAmB,YAA6BC,EAAAd,GApCvDe,KACC,EAACC,KAAEA,EAAIC,OAAEA,KAAa,qIAEkCA,EAAS,UAAY,mDACvCD,2LAKvCE,KAAK,IA2ByD,EAInEf,EAAKG,KAAKa,iBAAiB,UAtBRC,IACjBA,EAAMC,iBACN,MAAMC,EAAU,CACdN,KAAMI,EAAMG,OAAOC,SAASC,KAAKC,MACjCT,QAAQ,GAEVH,EAAAd,GAAM2B,KAAKL,GACXnB,EAAKG,KAAKsB,QACVjB,GAAQ,IAiBVA","sources":["src/js/items.json","src/js/ToDo.js"],"sourcesContent":["//------------------ data moodel -> array of objects (tasks):\n[\n  {\n    \"task\": \"купити хліба\",\n    \"isDone\": false\n  },\n  {\n    \"task\": \"купити молоко\",\n    \"isDone\": false\n  },\n  {\n    \"task\": \"поповнити телефон\",\n    \"isDone\": true\n  }\n]\n","//------------------ data moodel -> array of objects (tasks):\nimport items from './items';\n\n//------------------ object of DOM's refs:\nconst refs = {\n  body: document.body,\n  form: document.querySelector('.add-task-form'),\n  list: document.querySelector('.task-list'),\n  input: document.querySelector('.add-task-form__input'),\n  addBtn: document.querySelector('.add-task-form__btn'),\n};\n//---------------------------- function getItemTamplate ---------------------------------------------\n/**\n * Function returns string (tamplate for markup) of task list\n * @param {Array} items - array of obj (tasks)\n * @returns {string} string complete to insert in DOM\n */\nconst getItemTamplate = items => {\n  return items\n    .map(\n      ({ task, isDone }) => `<li class=\"task-list__item\">\n          <div class=\"task-list__box\">\n            <input class=\"task-list__check\" type=\"checkbox\" ${isDone ? 'checked' : ''}/>\n            <span class=\"task-list__text\">${task}</span>\n          </div>\n          <button class=\"task-list__delbtn\" type=\"button\"><img src=\"./src/images/iconmonstr-trash-can-10.svg\" alt=\"X\" width=\"24\"/></button>\n        </li>`,\n    )\n    .join('');\n};\n\n//---------------------------- function addNewTask  ------------------------------------------------\n/**\n * Function adds new task to task list\n * @param {Event} event\n * @returns\n */\nconst addNewTask = event => {\n  event.preventDefault();\n  const newTask = {\n    task: event.target.elements.text.value,\n    isDone: false,\n  };\n  items.push(newTask);\n  refs.form.reset();\n  render();\n};\n//------------------------------ function render  ------------------------------------------------\n/**\n * Function renders list of tasks in DOM\n * @param {} none\n * @returns\n */\nconst render = () => {\n  refs.list.innerHTML = '';\n  refs.list.insertAdjacentHTML('beforeend', getItemTamplate(items));\n};\n\n//----------------------- add event listner on form submit, and adds new task  ---------------------\nrefs.form.addEventListener('submit', addNewTask);\n\n// run\nrender();\n"],"names":["$8ee3f1f34b47001d$exports","JSON","parse","$493689dbc68bbd98$var$refs","body","document","form","querySelector","list","input","addBtn","$493689dbc68bbd98$var$render","innerHTML","insertAdjacentHTML","$parcel$interopDefault","map","task","isDone","join","addEventListener","event","preventDefault","newTask","target","elements","text","value","push","reset"],"version":3,"file":"module-06-11.c50889ae.js.map"}